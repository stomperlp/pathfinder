<diagram program="umletino" version="15.1"><zoom_level>8</zoom_level><help_text>Area
--
-gh: GraphicsHandler
-origin: Point
-originPoint: Point2D
-radius: double
--
+Area(gh: GraphicsHandler)
+getRadius(): double
+getRadiusInTiles(): double
+getOrigin(): Point
+getAttackedCharacters(): ArrayList&lt;Hexagon&gt;</help_text><element><id>UMLClass</id><coordinates><x>624</x><y>400</y><w>296</w><h>928</h></coordinates><panel_attributes>GraphicsHandler
--
+DARK_PRIMARY: Color
+DARK_SECONDARY: Color  
+LIGHT_PRIMARY: Color
+LIGHT_SECONDARY: Color
+io: IOHandler
+gm: GameHandler
#waiter: AnswerWaiter
#backgroundPanel: JPanel
#contentPanel: JPanel
#gridPanel: JPanel
#fxPanel: JPanel
#backgroundImage: Image
#toolbox: Toolbox
#consol: ConsolPanel
+hexSize: int
#thickness: int
#backgroundRows: int
#backgroundCols: int
#backgroundCenter: Point
#drawWidth: int
#drawHeight: int
#dragStart: Point
#gridOffset: Point
+hexlist: TwoKeyMap&lt;Integer, Integer, Hexagon&gt;
+themes: ArrayList&lt;Theme&gt;
+measure: ArrayList&lt;Measure&gt;
+markers: ArrayList&lt;Marker&gt;
+entities: ArrayList&lt;Entity&gt;
+selectedTiles: ArrayList&lt;Hexagon&gt;
+selectedEntityTiles: ArrayList&lt;Hexagon&gt;
+entityRangeTiles: ArrayList&lt;Hexagon&gt;
+entityPreviewTiles: ArrayList&lt;Hexagon&gt;
+attackTiles: ArrayList&lt;Hexagon&gt;
+tileUnderMouse: Hexagon
+currentTheme: Theme
+totalLength: Marker
+lineAttack: Line
+areaAttack: Area
+coneAttack: Cone
#zoomFactor: int
+debugMode: boolean
#darkMode: boolean
+isFlat: boolean
--
+GraphicsHandler()
-inputListener(): void
-initializeThemes(): void
+toggleConsol(): void
+setBackgroundImage(): void
+drawTileUnderMouse(hex: Hexagon): void
+addSelectedTile(hex: Hexagon): void
+addSelectedEntityTile(hex: Hexagon): void
+addEntityRangeTile(hex: Hexagon): void
+addEntityPreviewTile(hex: Hexagon): void
+drag(e: MouseEvent): void
-outOfBoundsCorrection(): void
+toggleDebugMode(): void
+zoom(notches: int, mousePoint: Point): void
+setHexSize(size: int): void
+setThickness(thickness: int): void
+getHexlist(): TwoKeyMap&lt;Integer,Integer,Hexagon&gt;
+spawnCharacter(size: int, maxhealth: int, AC: int, speed: int,
  initiative: int): void
+spawnCharacterAt(size: int, maxhealth: int, AC: int, speed: 
  int, initiative: int, tiles: ArrayList&lt;Hexagon&gt;): void
+addMarker(m: Marker): void
+gridOffset(x: int, y: int): void
+selectEntity(hex: Hexagon): Entity
+deleteEntities(t: int): void
+toggleDarkMode(): void
+changeTheme(s: String): void
+summonWall(): void
+summonEntity(): void
+toggleGridOrientation(): void
+addEntityPreviewTiles(IO: IOHandler): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1032</x><y>568</y><w>240</w><h>424</h></coordinates><panel_attributes>IOHandler
--
#currentHexagon: Hexagon
#gh: GraphicsHandler
#count: int
#mode: int
+isShiftDown: boolean
+isCtrlDown: boolean
+isAltDown: boolean
#mouseLog: Marker
#ADown: boolean
#DDown: boolean
#SDown: boolean
#WDown: boolean
-hasSelectedEntity: boolean
+mousePos: Point
-LMBDown: boolean
#gameMaster: boolean
--
+IOHandler(gh: GraphicsHandler)
+openFileBrowser(): File
+mousePressed(e: MouseEvent): void
-selectTool(t: Tool): void
+mouseReleased(e: MouseEvent): void
+mouseMoved(e: MouseEvent): void
+mouseDragged(e: MouseEvent): void
+mouseWheelMoved(e: MouseWheelEvent): void
~keyTyped(e: KeyEvent): void
~keyPressed(e: KeyEvent): void
~keyReleased(e: KeyEvent): void
+logMousePos(e: MouseEvent): void
+selectEntity(): void
+selectTile(): void
#toggleGameMaster(): void
+updateMouseTile(): void
+updateTotalLength(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>848</x><y>1544</y><w>232</w><h>312</h></coordinates><panel_attributes>GameHandler
--
#gh: GraphicsHandler
-lock: Object
-moveSpeed: int = 3
+init: HashMap&lt;Entity, Double&gt;
+intiMarkers: ArrayList&lt;Marker&gt;
-currentTurn: Entity = null
-currentTurnIndex: int = 0
--
+GameHandler(gh: GraphicsHandler)
+findClosestHexagon(point: Point2D): Hexagon
+tick(): void
+run(): void
+moveCharacter(h: Hexagon, c: Character): void
+initiative(entities: ArrayList&lt;Entity&gt;): void
+initiative(entity: Entity): void
+updateInitiativeMarkers(): void
+removeFromInitiative(entity: Entity): void
+sortInitiative(): void
+toggleShowInitiative(): void
+nextTurn(): void
+getInitiativeOrder(): ArrayList&lt;Entity&gt;
+getCurrentTurn(): Entity
+isInInitiative(entity: Entity): boolean
+clearInitiative(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>592</x><y>1496</y><w>184</w><h>128</h></coordinates><panel_attributes>Toolbox
--
-scroll: int
-tools: ArrayList&lt;Tool&gt;
#selectedTool: Tool
--
+Toolbox()
#paintComponent(g: Graphics): void
+initializeTools(): void
+getTools(): ArrayList&lt;Tool&gt;
+setTools(tools: ArrayList&lt;Tool&gt;): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>240</x><y>392</y><w>352</w><h>296</h></coordinates><panel_attributes>/Entity/
--
#image: Image
#tile: Hexagon
#location: Point2D
#occupiedTiles: ArrayList&lt;Hexagon&gt;
#hexTile: ArrayList&lt;Path2D&gt;
#debugMarker: Marker
#gh: GraphicsHandler
--
+Entity(gh: GraphicsHandler, image: Image, tile: Hexagon, location: Point2D)
+getImage(): Image
+getDrawSize(): double
+debugUpdate(): void
+getMarker(): Marker
+setImage(image: Image): void
+getTile(): Hexagon
+setTile(tile: Hexagon): void
+getOccupiedTiles(): ArrayList&lt;Hexagon&gt;
+setOccupiedTiles(occupiedTiles: ArrayList&lt;Hexagon&gt;): void
+getLocation(): Point2D
+setLocation(p: Point2D): void
+getSize(): int
+getSpeed(): int
+getInitiative(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>216</x><y>760</y><w>384</w><h>400</h></coordinates><panel_attributes>Character
--
+TINY: int = -2
+SMALL: int = -1
+NORMAL: int = 0
+LARGE: int = 1
+HUGE: int = 2
+GARGANTUAN: int = 3
-initiative: int
-maxHealth: int
-attack: int
-health: int
-speed: int
-size: int
-AC: int
--
+Character(gh: GraphicsHandler, image: Image, 
  tile: Hexagon, location: Point2D, size: int, 
  maxhealth: int, AC: int, speed: int, initiative: int)
+getSize(): int
+setSize(s: int): void
+getOccupiedTiles(): ArrayList&lt;Hexagon&gt;
+getOccupiedTiles(h: Hexagon, size: int, gh: GraphicsHandler): ArrayList&lt;Hexagon&gt;
+getDrawSize(): double
+getMaxHealth(): int
+setMaxHealth(maxHealth: int): void
+getHealth(): int
+setHealth(health: int): void
+getAttack(): int
+setAttack(attack: int): void
+getAC(): int
+setAC(AC: int): void
+getSpeed(): int
+setSpeed(speed: int): void
+getInitiative(): int
+setInitiative(initiative: int): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>760</y><w>200</w><h>72</h></coordinates><panel_attributes>Wall
--
--
+Wall(gh: GraphicsHandler, image:
  Image, tile: Hexagon, location: Point2D)
+getOccupiedTiles(): ArrayList&lt;Hexagon&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1232</x><y>224</y><w>344</w><h>152</h></coordinates><panel_attributes>Hexagon
--
-shape: Path2D
-center: Point2D
-gridCoords: Point
--
+Hexagon(center: Point2D, hexSize: int, gridCoords: Point, isFlat: boolean)
+contains(p: Point2D): boolean
+getShape(): Path2D
+getCenter(): Point2D
+getGridPoint(): Point
+setShape(shape: Path2D): void
+setCenter(center: Point2D): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>672</x><y>1704</y><w>152</w><h>152</h></coordinates><panel_attributes>Measure
--
-gh: GraphicsHandler
-origin: Point
-finishedPoint: Point
-line: Line2D
--
+Measure(gh: GraphicsHandler)
+getLine(): Line2D
+finish(): boolean
+length(): int
+getFinishedPoint(): Point
+getOrigin(): Point</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1312</x><y>400</y><w>584</w><h>128</h></coordinates><panel_attributes>AStar
--
--
+run(start: Hexagon, end: Hexagon, gh: GraphicsHandler, ignoreObstacles: boolean): ArrayList&lt;Hexagon&gt;
+range(center: Hexagon, speed: int, gh: GraphicsHandler): ArrayList&lt;Hexagon&gt;
+getNeighbors(hex: Hexagon, gh: GraphicsHandler): Hexagon[]
+getNeighbor(hex: Hexagon, neighborNR: int, gh: GraphicsHandler): Hexagon
+heuristic(a: Hexagon, b: Hexagon): double
-isOccupiedByEntity(hex: Hexagon, gh: GraphicsHandler): boolean
-isOccupiedByEntity(hex: Hexagon, gh: GraphicsHandler, sourceHex: Hexagon): boolean
-reconstructPath(start: Hexagon, end: Hexagon, cameFrom: HashMap&lt;Point, Point&gt;, gh: GraphicsHandler): ArrayList&lt;Hexagon&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>168</x><y>0</y><w>96</w><h>104</h></coordinates><panel_attributes>Dice
--
-numDice: int
-numSides: int
-rand: Random
--
+Dice(dice: String)
+roll(): int[]
+getDice(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1032</x><y>448</y><w>240</w><h>80</h></coordinates><panel_attributes>Calc
--
--
+toBufferedImage(img: Image): BufferedImage
+cutCirce(image: Image): Image
+cutHex(image: Image): Image
+toCubeCoordinate(x: int, y: int): int[]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>576</x><y>1392</y><w>200</w><h>80</h></coordinates><panel_attributes>AnswerWaiter
--
-answerReceived: boolean
-answer: Object
--
+waitForAnswer(): Object
+provideAnswer(answer: Object): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>912</x><y>712</y><w>136</w><h>24</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>150;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1072</x><y>776</y><w>360</w><h>824</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>250;10;420;10;430;1010;10;1010</additional_attributes></element><element><id>Relation</id><coordinates><x>120</x><y>680</y><w>168</w><h>104</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>190;10;190;60;10;60;10;102</additional_attributes></element><element><id>Relation</id><coordinates><x>912</x><y>368</y><w>336</w><h>72</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>400;11;400;70;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>912</x><y>1024</y><w>136</w><h>24</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>150;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>680</x><y>1320</y><w>24</w><h>88</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>400</x><y>680</y><w>24</w><h>96</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>768</x><y>1320</y><w>56</w><h>216</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;250;50;250;50;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>296</x><y>0</y><w>232</w><h>296</h></coordinates><panel_attributes>Consol
--
- Active: boolean = true
- gh: GraphicsHandler
- commandHistory: List&lt;String&gt;
- historyIndex: int = -1
- currentInput: String = ""
- diceMarkers: Marker[] = {}
- confirm: boolean = false
--
+ Consol(gh: GraphicsHandler)
+ command(input: String): void
- character(args: String[]): void
- cutArgs(args: String[]): String[]
- help(arg: String): void
- roll(inputSegments: String[]): void
+ isActive(): boolean
+ setGraphicsHandler(gh: GraphicsHandler): void
+ toggleActive(): void
+ arrowUp(): void
+ arrowDown(): void
+ setFontSize(s: int): void
+ displayConfirmText(s: String): void
- confirm(): void
- deny(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>728</x><y>344</y><w>24</w><h>72</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>408</x><y>344</y><w>216</w><h>64</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;60;10;10;250;10</additional_attributes></element><element><id>Relation</id><coordinates><x>72</x><y>344</y><w>360</w><h>432</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;520;10;430;170;430;170;10;430;10</additional_attributes></element><element><id>Relation</id><coordinates><x>568</x><y>344</y><w>56</w><h>432</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;520;10;450;50;450;50;10</additional_attributes></element><element><id>Relation</id><coordinates><x>888</x><y>1320</y><w>88</w><h>240</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;280;90;180;10;110;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1400</x><y>520</y><w>24</w><h>280</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;10;330</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1008</x><y>152</y><w>200</w><h>216</h></coordinates><panel_attributes>
TwoKeyMap&lt;K1, K2, V&gt;
--
-map: Map&lt;CompositeKey&lt;K1, K2&gt;, V&gt;
--
+put(key1: K1, key2: K2, value: V): void
+get(key1: K1, key2: K2): V
+containsKey(key1: K1, key2: K2): boolean
+remove(key1: K1, key2: K2): V
+clear(): void
+values(): Collection&lt;V&gt;

CompositeKey&lt;K1, K2&gt;
--
-key1: K1
-key2: K2
--
+CompositeKey(key1: K1, key2: K2)
+equals(o: Object): boolean
+hashCode(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>256</x><y>16</y><w>56</w><h>24</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;50;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1032</x><y>1016</y><w>352</w><h>488</h></coordinates><panel_attributes>Marker
--
+COORDINATES: int = 0
+STAT: int = 1
+DICE: int = 2
+DICERESULT: int = 3
+TILE: int = 4
+gh: GraphicsHandler
-isDebugMarker: boolean
-purpose: int
-displayCoords: Point2D
-coords: Point2D
-color: Color
-stat: double
-isVisible: boolean = true
-suffix: String = ""
-attachedTo: Entity
-debugValue: double
--
+Marker(location: Point2D, purpose: int, isDebugMarker: boolean)
+Marker(stat: double, coords: Point, purpose: int, isDebugMarker: boolean)
+moveTo(p: Point2D): void
+moveTo(p: Point2D, dp: Point2D): void
+moveBy(p: Point2D): void
+getText(): String
+getColor(): Color
+setColor(color: Color): void
+getRawContent(): Object
+setStat(stat: int): void
+getPoint(): Point2D
+isDebugMarker(): boolean
+getPurpose(): int
+isVisible(): boolean
+toggleVisible(): void
+setVisible(isVisible: boolean): void
+getSuffix(): String
+setSuffix(suffix: String): void
+update(): void
+attachTo(e: Entity): void
+getAttachedEntity(): Entity
+setDebugValue(value: double): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>640</x><y>0</y><w>208</w><h>352</h></coordinates><panel_attributes>ConsolPanel
--
#consol: Consol
-logLabels: ArrayList&lt;JLabel&gt;
-logs: ArrayList&lt;String&gt;
-gh: GraphicsHandler
-scrollLog: int = 0
-active: boolean = true
-showLog: boolean = true
-logPanel: JPanel
--
+ConsolPanel(gh: GraphicsHandler)
#paintComponent(g: Graphics): void
+addLogMessage(message: String): void
+scrollLog(notches: int): void
-logUpdate(): void
+isActive(): boolean
+toggleActive(): void
+setFontSize(size: int): void
+changeFontSize(delta: int): void
+toggleLog(): void
+setSelectedTextColor(c: Color): void
+setSelectionColor(c: Color): void
+getconsol(): Consol
+changeForeground(c: Color): void
+changeBackground(c: Color): void
+setLogBackground(c: Color): void
+clearLogs(): void
+changeBorder(b: LineBorder): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>872</x><y>0</y><w>264</w><h>128</h></coordinates><panel_attributes>Theme
--
+name: String
+primary: Color
+secondary: Color
--
+Theme(name: String, primary: Color, secondary: Color)
+toString(): String
+getName(): String
+getPrimary(): Color
+getSecondary(): Color</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>432</x><y>1704</y><w>224</w><h>152</h></coordinates><panel_attributes>Area
--
-gh: GraphicsHandler
-origin: Point
-originPoint: Point2D
-radius: double
--
+Area(gh: GraphicsHandler)
+getRadius(): double
+getRadiusInTiles(): double
+getOrigin(): Point
+getAttackedCharacters(): ArrayList&lt;Hexagon&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>144</x><y>1448</y><w>272</w><h>232</h></coordinates><panel_attributes>Cone
--
-gh: GraphicsHandler
-origin: Point
-originPoint: Point2D
-radius: double
-angle: double
-startAngle: double
--
+Cone(gh: GraphicsHandler)
+getRadius(): double
+getRadiusInTiles(): double
+getOrigin(): Point
-calculateAngle(point1: Point2D, point2: Point2D): double
-isAngleInRange(testAngle: double, 
 startAngle: double, rangeAngle: double): boolean
+getAttackedCharacters(): ArrayList&lt;Hexagon&gt;
+changeAngle(notches: int): void
+getAngle(): double
+getStartAngle(): double</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>64</x><y>1704</y><w>352</w><h>152</h></coordinates><panel_attributes>Line
--
-gh: GraphicsHandler
-origin: Point
-line: Line2D = new Line2D.Double()
--
+Line(gh: GraphicsHandler)
+getLine(): Line2D
+length(): int
+getOrigin(): Point
+getAttackedCharacters(): ArrayList&lt;Hexagon&gt;
+getPointsAlongLineBySpacing(line: Line2D, spacing: double): List&lt;Point2D&gt;
+getPointsAlongLineByNumber(line: Line2D, numPoints: int): List&lt;Point2D&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>216</x><y>1192</y><w>200</w><h>232</h></coordinates><panel_attributes>Tool
--
+DRAG_MODE: int = 0
+LENGTH_MODE: int = 1
+AREA_MODE: int = 2
+LINE_MODE: int = 3
+CONE_MODE: int = 4
-hitbox: Rectangle
-icon: Image
-toolMode: int
-sort: int
--
+Tool(icon: Image, toolMode: int, sort: int)
+getIcon(): Image
+updateHitbox(s: int): void
+setIcon(icon: Image): void
+getToolMode(): int
+setToolMode(toolMode: int): void
+moveBy(x: int, y: int): void
+getHitbox(): Rectangle</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>880</x><y>120</y><w>24</w><h>296</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;10;350</additional_attributes></element><element><id>Relation</id><coordinates><x>912</x><y>176</y><w>112</w><h>240</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>120;10;10;10;10;280</additional_attributes></element><element><id>Relation</id><coordinates><x>408</x><y>1312</y><w>232</w><h>24</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;270;10</additional_attributes></element><element><id>Relation</id><coordinates><x>408</x><y>1312</y><w>128</w><h>216</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;250;140;250;140;10</additional_attributes></element><element><id>Relation</id><coordinates><x>408</x><y>1504</y><w>128</w><h>216</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;250;60;190;140;190;140;10</additional_attributes></element><element><id>Relation</id><coordinates><x>512</x><y>1648</y><w>24</w><h>72</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>512</x><y>1648</y><w>248</w><h>72</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>290;70;290;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>408</x><y>288</y><w>24</w><h>80</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>520</x><y>24</y><w>136</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;150;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1264</x><y>472</y><w>64</w><h>24</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;60;10</additional_attributes></element><element><id>Relation</id><coordinates><x>912</x><y>472</y><w>136</w><h>24</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>150;10;10;10</additional_attributes></element></diagram>