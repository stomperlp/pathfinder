<diagram program="umletino" version="15.1"><zoom_level>4</zoom_level><element><id>UMLClass</id><coordinates><x>372</x><y>228</y><w>184</w><h>260</h></coordinates><panel_attributes>GraphicsHandler
--
+DARK_PRIMARY: Color
+DARK_SECONDARY: Color
+LIGHT_PRIMARY: Color
+LIGHT_SECONDARY: Color
#io: IOHandler
#gm: GameHandler
#waiter: AnswerWaiter
#backgroundPanel: JPanel
#contentPanel: JPanel
#gridPanel: JPanel
#fxPanel: JPanel
#backgroundImage: Image
#toolbox: Toolbox
#consol: Consol
+hexSize: int
#thickness: int
#backgroundRows: int
#backgroundCols: int
#backgroundCenter: Point
+hexlist: TwoKeyMap&lt;Integer, Integer, Hexagon&gt;
+measure: ArrayList&lt;Measure&gt;
+markers: ArrayList&lt;Marker&gt;
+entities: ArrayList&lt;Entity&gt;
+selectedTiles: ArrayList&lt;Hexagon&gt;
+selectedEntityTiles: ArrayList&lt;Hexagon&gt;
+entityRangeTiles: ArrayList&lt;Hexagon&gt;
+entityPreviewTiles: ArrayList&lt;Hexagon&gt;
+tileUnderMouse: Hexagon
+isFlat: boolean
--
+GraphicsHandler()
+toggleConsol(): void
+setBackgroundImage(): void
+drawTileUnderMouse(hex: Hexagon): void
+addSelectedTile(hex: Hexagon): void
+spawnCharacter(size: int, maxhealth: int, AC: int, speed: int, initiative: int): void
+selectEntity(hex: Hexagon): Entity
+deleteEntities(): void
+toggleDarkMode(): void
+summonWall(): void
+summonEntity(): void
+toggleGridOrientation(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>620</x><y>228</y><w>120</w><h>188</h></coordinates><panel_attributes>IOHandler
--
#currentHexagon: Hexagon
#gh: GraphicsHandler
#count: int
#mode: int
#isShiftDown: boolean
#isCtrlDown: boolean
#mouseLog: Marker
#ADown: boolean
#DDown: boolean
#SDown: boolean
#WDown: boolean
#hasSelectedEntity: boolean
+mousePos: Point
#LMBDown: boolean
#gameMaster: boolean
--
+IOHandler(gh: GraphicsHandler)
+openFileBrowser(): File
+mousePressed(e: MouseEvent): void
+mouseReleased(e: MouseEvent): void
+mouseMoved(e: MouseEvent): void
+mouseDragged(e: MouseEvent): void
+mouseWheelMoved(e: MouseWheelEvent): void
+keyTyped(e: KeyEvent): void
+keyPressed(e: KeyEvent): void
+keyReleased(e: KeyEvent): void
+logMousePos(e: MouseEvent): void
+selectEntity(): void
+selectTile(): void
#toggleGameMaster(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>476</x><y>536</y><w>112</w><h>56</h></coordinates><panel_attributes>GameHandler
--
#gh: GraphicsHandler
-lock: Object
--
+GameHandler(gh: GraphicsHandler)
+findClosestHexagon(point: Point2D): Hexagon
+tick(): void
+run(): void
+moveCharacter(h: Hexagon, c: Character): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>476</x><y>604</y><w>92</w><h>64</h></coordinates><panel_attributes>Toolbox
--
-scroll: int
-tools: ArrayList&lt;Tool&gt;
#selectedTool: Tool
--
+Toolbox()
#paintComponent(g: Graphics): void
+initializeTools(): void
+getTools(): ArrayList&lt;Tool&gt;
+setTools(tools: ArrayList&lt;Tool&gt;): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>180</x><y>228</y><w>176</w><h>144</h></coordinates><panel_attributes>Entity
--
#image: Image
#tile: Hexagon
#location: Point2D
#occupiedTiles: ArrayList&lt;Hexagon&gt;
#hexTile: ArrayList&lt;Path2D&gt;
#debugMarker: Marker
#gh: GraphicsHandler
--
+Entity(gh: GraphicsHandler, image: Image, tile: Hexagon, location: Point2D)
+getImage(): Image
+getDrawSize(): double
+debugUpdate(): void
+getMarker(): Marker
+setImage(image: Image): void
+getTile(): Hexagon
+setTile(tile: Hexagon): void
+getOccupiedTiles(): ArrayList&lt;Hexagon&gt;
+setOccupiedTiles(tiles: ArrayList&lt;Hexagon&gt;): void
+getLocation(): Point2D
+setLocation(p: Point2D): void
+getSize(): int
+getSpeed(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>168</x><y>408</y><w>192</w><h>200</h></coordinates><panel_attributes>Character
--
+TINY: int = -2
+SMALL: int = -1
+NORMAL: int = 0
+LARGE: int = 1
+HUGE: int = 2
+GARGANTUAN: int = 3
-initiative: int
-maxHealth: int
-attack: int
-health: int
-speed: int
-size: int
-AC: int
--
+Character(gh: GraphicsHandler, image: Image, 
  tile: Hexagon, location: Point2D, size: int, 
  maxhealth: int, AC: int, speed: int, initiative: int)
+getSize(): int
+setSize(s: int): void
+getOccupiedTiles(): ArrayList&lt;Hexagon&gt;
+getOccupiedTiles(h: Hexagon, size: int, gh: GraphicsHandler): ArrayList&lt;Hexagon&gt;
+getDrawSize(): double
+getMaxHealth(): int
+setMaxHealth(maxHealth: int): void
+getHealth(): int
+setHealth(health: int): void
+getAttack(): int
+setAttack(attack: int): void
+getAC(): int
+setAC(AC: int): void
+getSpeed(): int
+setSpeed(speed: int): void
+getInitiative(): int
+setInitiative(initiative: int): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>60</x><y>408</y><w>100</w><h>36</h></coordinates><panel_attributes>Wall
--
--
+Wall(gh: GraphicsHandler, image:
  Image, tile: Hexagon, location: Point2D)
+getOccupiedTiles(): ArrayList&lt;Hexagon&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>620</x><y>140</y><w>172</w><h>76</h></coordinates><panel_attributes>Hexagon
--
-shape: Path2D
-center: Point2D
-gridCoords: Point
--
+Hexagon(center: Point2D, hexSize: int, gridCoords: Point, isFlat: boolean)
+contains(p: Point2D): boolean
+getShape(): Path2D
+getCenter(): Point2D
+getGridPoint(): Point
+setShape(shape: Path2D): void
+setCenter(center: Point2D): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>620</x><y>424</y><w>168</w><h>160</h></coordinates><panel_attributes>Marker
--
+COORDINATES: int = 0
+STAT: int = 1
+DICE: int = 2
+DICERESULT: int = 3
+TILE: int = 4
-coords: Point2D
-displayCoords: Point2D
-purpose: int
-stat: int
-isDebugMarker: boolean
-color: Color
--
+Marker(location: Point2D, purpose: int, isDebugMarker: boolean)
+Marker(stat: int, coords: Point, purpose: int, isDebugMarker: boolean)
+moveTo(p: Point2D): void
+moveTo(p: Point2D, dp: Point2D): void
+moveBy(p: Point2D): void
+getText(): String
+getColor(): Color
+setColor(color: Color): void
+getRawContent(): Object
+setStat(stat: int): void
+getPoint(): Point2D
+isDebugMarker(): boolean
+getPurpose(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>372</x><y>536</y><w>80</w><h>72</h></coordinates><panel_attributes>Measure
--
-gh: GraphicsHandler
-origin: Point
-finishedPoint: Point
-line: Line2D
--
+Measure(gh: GraphicsHandler)
+getLine(): Line2D
+finish(): boolean
+length(): int
+getFinishedPoint(): Point
+getOrigin(): Point</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>792</x><y>228</y><w>292</w><h>64</h></coordinates><panel_attributes>AStar
--
--
+run(start: Hexagon, end: Hexagon, gh: GraphicsHandler, ignoreObstacles: boolean): ArrayList&lt;Hexagon&gt;
+range(center: Hexagon, speed: int, gh: GraphicsHandler): ArrayList&lt;Hexagon&gt;
+getNeighbors(hex: Hexagon, gh: GraphicsHandler): Hexagon[]
+getNeighbor(hex: Hexagon, neighborNR: int, gh: GraphicsHandler): Hexagon
+heuristic(a: Hexagon, b: Hexagon): double
-isOccupiedByEntity(hex: Hexagon, gh: GraphicsHandler): boolean
-isOccupiedByEntity(hex: Hexagon, gh: GraphicsHandler, sourceHex: Hexagon): boolean
-reconstructPath(start: Hexagon, end: Hexagon, cameFrom: HashMap&lt;Point, Point&gt;, gh: GraphicsHandler): ArrayList&lt;Hexagon&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>348</x><y>68</y><w>48</w><h>52</h></coordinates><panel_attributes>Dice
--
-numDice: int
-numSides: int
-rand: Random
--
+Dice(dice: String)
+roll(): int[]
+getDice(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>812</x><y>368</y><w>112</w><h>40</h></coordinates><panel_attributes>Calc
--
--
+toBufferedImage(img: Image): BufferedImage
+cutCirce(image: Image): Image
+cutHex(image: Image): Image
+toCubeCoordinate(x: int, y: int): int[]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>620</x><y>592</y><w>96</w><h>48</h></coordinates><panel_attributes>AnswerWaiter
--
-answerReceived: boolean
-answer: Object
--
+waitForAnswer(): Object
+provideAnswer(answer: Object): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>552</x><y>300</y><w>76</w><h>12</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>170;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>572</x><y>400</y><w>236</w><h>260</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>420;10;570;10;570;630;10;630;10;480</additional_attributes></element><element><id>Relation</id><coordinates><x>120</x><y>368</y><w>84</w><h>48</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>190;10;190;60;10;60;10;102</additional_attributes></element><element><id>Relation</id><coordinates><x>540</x><y>200</y><w>88</w><h>36</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>200;11;10;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>552</x><y>328</y><w>76</w><h>112</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>170;260;90;260;90;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>408</x><y>484</y><w>12</w><h>60</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;130;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>736</x><y>244</y><w>64</w><h>12</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>140;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>552</x><y>464</y><w>76</w><h>140</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>170;330;130;330;130;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>260</x><y>368</y><w>12</w><h>48</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>460</x><y>484</y><w>24</w><h>140</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>40;330;10;330;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>408</x><y>68</y><w>116</w><h>148</h></coordinates><panel_attributes>Consol
--
- Active: boolean = true
- gh: GraphicsHandler
- commandHistory: List&lt;String&gt;
- historyIndex: int = -1
- currentInput: String = ""
- diceMarkers: Marker[] = {}
- confirm: boolean = false
--
+ Consol(gh: GraphicsHandler)
+ command(input: String): void
- character(args: String[]): void
- cutArgs(args: String[]): String[]
- help(arg: String): void
- roll(inputSegments: String[]): void
+ isActive(): boolean
+ setGraphicsHandler(gh: GraphicsHandler): void
+ toggleActive(): void
+ arrowUp(): void
+ arrowDown(): void
+ setFontSize(s: int): void
+ displayConfirmText(s: String): void
- confirm(): void
- deny(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>460</x><y>212</y><w>12</w><h>24</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;40;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>264</x><y>200</y><w>152</w><h>36</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;70;10;10;360;10</additional_attributes></element><element><id>Relation</id><coordinates><x>96</x><y>200</y><w>180</w><h>216</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;520;10;10;430;10</additional_attributes></element><element><id>Relation</id><coordinates><x>344</x><y>200</y><w>28</w><h>216</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;520;10;450;50;450;50;10</additional_attributes></element><element><id>Relation</id><coordinates><x>528</x><y>484</y><w>12</w><h>60</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;130;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>796</x><y>288</y><w>144</w><h>140</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>340;10;340;330;10;330</additional_attributes></element><element><id>UMLClass</id><coordinates><x>812</x><y>308</y><w>100</w><h>56</h></coordinates><panel_attributes>TwoKeyMap&lt;K1, K2, V&gt;
--
-map: Map&lt;CompositeKey&lt;K1, K2&gt;, V&gt;
--
+put(key1: K1, key2: K2, value: V): void
+get(key1: K1, key2: K2): V
+containsKey(key1: K1, key2: K2): boolean
+remove(key1: K1, key2: K2): V
+clear(): void
+values(): Collection&lt;V&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>392</x><y>76</y><w>24</w><h>12</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;40;10</additional_attributes></element></diagram>